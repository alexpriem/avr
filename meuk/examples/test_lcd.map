Archive member included because of file (symbol)

/usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
                              /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o (exit)
/usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                              test_lcd.o (__do_copy_data)
/usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                              test_lcd.o (__do_clear_bss)
/usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
                              test_lcd.o (itoa)
/usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o) (__udivmodhi4)

Discarded input sections

 .stabstr       0x00000000        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .stabstr       0x00000000        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
 .stabstr       0x00000000        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
LOAD test_lcd.o
LOAD lcd.o
LOAD /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a
LOAD /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x472
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054       0x53 test_lcd.o
                0x000000a8                . = ALIGN (0x2)
 *fill*         0x000000a7        0x1 00
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
 *(.init0)
 .init0         0x000000a8        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                0x000000a8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000a8        0xc /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000b4       0x16 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                0x000000b4                __do_copy_data
 .init4         0x000000ca       0x10 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                0x000000ca                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000da        0x8 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000e2        0x4 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                0x000000e2                __vector_1
                0x000000e2                __vector_12
                0x000000e2                __bad_interrupt
                0x000000e2                __vector_6
                0x000000e2                __vector_3
                0x000000e2                __vector_11
                0x000000e2                __vector_13
                0x000000e2                __vector_17
                0x000000e2                __vector_19
                0x000000e2                __vector_7
                0x000000e2                __vector_5
                0x000000e2                __vector_4
                0x000000e2                __vector_9
                0x000000e2                __vector_2
                0x000000e2                __vector_15
                0x000000e2                __vector_8
                0x000000e2                __vector_14
                0x000000e2                __vector_10
                0x000000e2                __vector_16
                0x000000e2                __vector_18
                0x000000e2                __vector_20
 .text          0x000000e6      0x10a test_lcd.o
                0x000000f6                main
                0x000000e6                wait_until_key_pressed
 .text          0x000001f0      0x1f6 lcd.o
                0x000002d6                lcd_data
                0x000002ea                lcd_gotoxy
                0x00000312                lcd_putc
                0x0000030a                lcd_home
                0x00000302                lcd_clrscr
                0x000002fa                lcd_getxy
                0x0000033c                lcd_puts
                0x00000354                lcd_puts_p
                0x00000370                lcd_init
                0x000002c2                lcd_command
 .text          0x000003e6        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
 .text          0x000003e6        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .text          0x000003e6        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x000003e6       0x42 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
                0x000003e6                itoa
 .text          0x00000428       0x20 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000428                strrev
 .text          0x00000448        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                0x00000448                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000448        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000448        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000448        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000448       0x28 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                0x00000448                __udivmodhi4
                0x00000470                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000470        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
                0x00000470                exit
                0x00000470                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000470        0x2 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000472                _etext = .

.data           0x00800060       0x2a load address 0x00000472
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0x2a test_lcd.o
 .data          0x0080008a        0x0 lcd.o
 .data          0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
 .data          0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080008a                . = ALIGN (0x2)
                0x0080008a                _edata = .
                0x0080008a                PROVIDE (__data_end, .)

.bss            0x0080008a        0x0
                0x0080008a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080008a        0x0 test_lcd.o
 .bss           0x0080008a        0x0 lcd.o
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0080008a        0x0 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x0080008a                PROVIDE (__bss_end, .)
                0x00000472                __data_load_start = LOADADDR (.data)
                0x0000049c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080008a        0x0
                0x0080008a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080008a                PROVIDE (__noinit_end, .)
                0x0080008a                _end = .
                0x0080008a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x600
 *(.stab)
 .stab          0x00000000      0x378 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
 .stab          0x00000378      0x1b0 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00000528       0xd8 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000       0xb4
 *(.stabstr)
 .stabstr       0x00000000       0xb4 /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 test_lcd.o
 .debug_aranges
                0x00000020       0x20 lcd.o

.debug_pubnames
                0x00000000       0xd4
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x36 test_lcd.o
 .debug_pubnames
                0x00000036       0x9e lcd.o

.debug_info     0x00000000      0x5b7
 *(.debug_info)
 .debug_info    0x00000000      0x1a4 test_lcd.o
 .debug_info    0x000001a4      0x413 lcd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x2f0
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xdb test_lcd.o
 .debug_abbrev  0x000000db      0x215 lcd.o

.debug_line     0x00000000      0x645
 *(.debug_line)
 .debug_line    0x00000000      0x1da test_lcd.o
 .debug_line    0x000001da      0x46b lcd.o

.debug_frame    0x00000000      0x120
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 test_lcd.o
 .debug_frame   0x00000030       0xf0 lcd.o

.debug_str      0x00000000      0x19f
 *(.debug_str)
 .debug_str     0x00000000       0xc2 test_lcd.o
                                 0xfb (size before relaxing)
 .debug_str     0x000000c2       0xdd lcd.o
                                0x19b (size before relaxing)

.debug_loc      0x00000000      0x286
 *(.debug_loc)
 .debug_loc     0x00000000       0x13 test_lcd.o
 .debug_loc     0x00000013      0x273 lcd.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(test_lcd.elf elf32-avr)

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__bss_end                                         /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                                                  lcd.o
                                                  test_lcd.o
__do_copy_data                                    /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                                                  lcd.o
                                                  test_lcd.o
__heap_end                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__init                                            /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__stack                                           /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
                                                  test_lcd.o
__udivmodhi4                                      /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
__vector_1                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_10                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_11                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_12                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_13                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_14                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_15                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_16                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_17                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_18                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_19                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_2                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_20                                       /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_3                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_4                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_5                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_6                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_7                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_8                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_9                                        /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vector_default                                  /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
__vectors                                         /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
_exit                                             /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
exit                                              /usr/local/AVR/lib/gcc/avr/4.2.1/avr5/libgcc.a(_exit.o)
                                                  /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
itoa                                              /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
                                                  test_lcd.o
lcd_clrscr                                        lcd.o
                                                  test_lcd.o
lcd_command                                       lcd.o
                                                  test_lcd.o
lcd_data                                          lcd.o
                                                  test_lcd.o
lcd_getxy                                         lcd.o
lcd_gotoxy                                        lcd.o
                                                  test_lcd.o
lcd_home                                          lcd.o
lcd_init                                          lcd.o
                                                  test_lcd.o
lcd_putc                                          lcd.o
                                                  test_lcd.o
lcd_puts                                          lcd.o
                                                  test_lcd.o
lcd_puts_p                                        lcd.o
                                                  test_lcd.o
main                                              test_lcd.o
                                                  /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm32.o
strrev                                            /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(strrev.o)
                                                  /usr/local/AVR/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a(itoa.o)
wait_until_key_pressed                            test_lcd.o
